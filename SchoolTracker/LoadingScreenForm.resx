<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>